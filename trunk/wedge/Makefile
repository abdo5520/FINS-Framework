# fins.mk contains the compiler and linker options for each target platform
#include $(FINS_ROOT_DIR)/settings.finsmk

#Name of the module
PROJECT_NAME = wedge

#CFLAGS += $(WEDGE_INC)
#OBJS = fins_stack_wedge.o

#This is an autogenerated list of includes used in this project
#INCLUDES = $(shell ls $(subst -I,, $(CAPTURER_INC)) | grep \\.h)

obj-m += fins_stack_wedge.o			# build type hardcoded to module

#COMPILER ?=
#ARCH ?=
#KERNELDIR ?= /lib/modules/$(shell uname -r)/build

COMPILER ?=/home/alex/jreed/lkm_test/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
ARCH ?=arm
KERNELDIR ?= /home/alex/jreed/lkm_test/omap

.PHONY:all
all:$(PROJECT_NAME)
	@echo "$(PROJECT_NAME) is compiled\n"
$(PROJECT_NAME):
	@make -I . -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
#@make -I . -C $(KERNELDIR) M=$(PWD) ARCH=$(ARCH) CROSS_COMPILE=$(COMPILER) modules
.PHONY:clean
clean:
	@make -I . -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
#@make -I . -C $(KERNELDIR) M=$(PWD) ARCH=$(ARCH) CROSS_COMPILE=$(COMPILER) clean
install:
	adb push fins_stack_wedge.ko /data/local/tmp

#### TARGETS #####
#%.o:%.c $(INCLUDES) 
#	@$(CC) $(CFLAGS) -c $<
